{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/controller/wechat/index.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AAGb,uCAAuC;AACvC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC;AAEjD,IAAI,aAAa,GAAI,0CAA0C,CAAC;AAEhE;IACU,cAAc;;YAChB,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAC,MAAM,EAAE,EAAE;gBAClC,WAAW,CAAC;oBACR,MAAM,EAAE,KAAK;oBACb,GAAG,EAAE,GAAG,aAAa,sCAAsC,MAAM,CAAC,MAAM,CAAC,KAAK,WAAW,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;iBACrH,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE;oBACzB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACR,MAAM,CAAC,KAAK,CAAC,CAAC;wBACd,MAAM,CAAC;oBACX,CAAC;oBACD,IAAI,IAAQ,CAAC;oBAEb,IAAI,CAAC;wBACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC5B,CAAC;oBAAC,KAAK,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;wBACV,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBACzB,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACvC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACb,MAAM,CAAC;oBACX,CAAC;oBACD,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBAE/B,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAA;QACN,CAAC;KAAA;IACK,IAAI,CAAC,GAAW,EAAC,GAAY;;YAC/B,MAAM,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE;gBACpB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;gBAClB,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;gBAChC,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;gBAC5B,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACpB,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;gBAC5B,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;gBACxB,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACpD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC;oBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,EAAE,CAAC,CAAA;gBACxB,CAAC;gBAAA,IAAI,CAAA,CAAC;oBACF,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC;YACL,CAAC,CAAC,CAAA;QACN,CAAC;KAAA;CACJ;AA9CD,yBA8CC","sourcesContent":["'use strict';\r\n\r\nimport { Request,Response } from 'express';\r\nimport * as HttpRequest from \"request\";\r\nvar sha1 = require('sha1'); \r\nconst config = require('config-lite')(__dirname);\r\n\r\nvar GET_TOKEN_API  = 'https://api.weixin.qq.com/cgi-bin/token?';\r\n\r\nexport default class Wechat {\r\n    async getAccessToken() {\r\n        return new Promise((resolve,reject) => {\r\n            HttpRequest({\r\n                method: \"get\",\r\n                url: `${GET_TOKEN_API}grant_type=client_credential&appid=${config.wechat.appID}&secret=${config.wechat.appSecret}`,\r\n            }, (error, response, body) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                var json:any;\r\n                \r\n                try {\r\n                    json = JSON.parse(body);\r\n                } catch(err) {\r\n                    throw new error(err);\r\n                }\r\n                \r\n                if (!json.access_token || json.errorcode) {\r\n                    reject(json);\r\n                    return;\r\n                }\r\n                json[\"timeStamp\"] = Date.now();\r\n                // redis.set(rAccessTokenKey, JSON.stringify(json));\r\n                resolve(json);\r\n            });\r\n        })\r\n    }\r\n    async sign(req:Request,res:Response) {\r\n        return new Promise(() => {\r\n            var q = req.query;\r\n            var token = config.wechat.token;  \r\n            var signature = q.signature; //微信加密签名  \r\n            var nonce = q.nonce; //随机数  \r\n            var timestamp = q.timestamp; //时间戳\r\n            var echostr = q.echostr; //随机字符串\r\n            var str = [token, timestamp, nonce].sort().join('');\r\n            var sha = sha1(str);  \r\n            if (sha == signature) {\r\n                res.send(echostr+'')\r\n            }else{  \r\n                res.send('err');  \r\n            } \r\n        })\r\n    }\r\n}"]}